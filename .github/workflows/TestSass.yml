name: Test Sass Compilation
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  Build:
    runs-on: ubuntu-22.04
    steps:
      - name: Create a Drupal project
        run: composer create-project drupal/recommended-project . --ignore-platform-req=ext-gd

      - uses: actions/checkout@v4
        with:
          path: drainpipe

      - name: Setup drainpipe-dev
        run: mv drainpipe/drainpipe-dev .

      - uses: ./drainpipe/scaffold/github/actions/common/set-env

      - name: Install DDEV
        uses: ./drainpipe/scaffold/github/actions/common/ddev
        with:
          git-name: Drainpipe Bot
          git-email: no-reply@example.com

      - name: Setup Project
        run: |
          ddev config --auto
          ddev config --nodejs-version "18"
          ddev start
          ddev composer config extra.drupal-scaffold.gitignore true
          ddev composer config --json extra.drupal-scaffold.allowed-packages '["lullabot/drainpipe-dev", "lullabot/drainpipe"]'
          ddev composer config --no-plugins allow-plugins.composer/installers true
          ddev composer config --no-plugins allow-plugins.drupal/core-composer-scaffold true
          ddev composer config --no-plugins allow-plugins.lullabot/drainpipe true
          ddev composer config --no-plugins allow-plugins.lullabot/drainpipe-dev true
          ddev composer config repositories.drainpipe --json '{"type": "path", "url": "drainpipe", "options": {"symlink": false}}'
          ddev composer config repositories.drainpipe-dev --json '{"type": "path", "url": "drainpipe-dev", "options": {"symlink": false}}'
          ddev composer config minimum-stability dev
          ddev composer require "lullabot/drainpipe @dev" --with-all-dependencies
          ddev composer require "lullabot/drainpipe-dev @dev" --dev --with-all-dependencies

      - name: Setup Test Files
        run: |
          cp drainpipe/tests/fixtures/sass/Taskfile.yml .
          cp drainpipe/tests/fixtures/sass/style.scss .

      - name: Create Artifact
        run: zip -r /tmp/drainpipe.zip ./

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: test-sass-build
          path: /tmp/drainpipe.zip

  Test-Sass-NPM:
    runs-on: ubuntu-22.04
    needs: Build
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: test-sass-build

      - name: Restore Workspace
        run: |
          cd ../
          mv ${{ github.workspace }}/drainpipe.zip /tmp/drainpipe.zip
          unzip -o /tmp/drainpipe.zip -d ${{ github.workspace }}
          cd ${{ github.workspace }}

      - uses: ./drainpipe/scaffold/github/actions/common/set-env

      - name: Install DDEV
        uses: ./drainpipe/scaffold/github/actions/common/ddev
        with:
          git-name: Drainpipe Bot
          git-email: no-reply@example.com#

      - name: Start DDEV
        run: ddev start

      - name: Setup Sass
        run: |
          ddev npm init -y
          ddev npm install drainpipe/metapackages/sass --save-dev

      - name: Compile Sass
        run: ddev task assets

  Test-Yarn-Classic:
    runs-on: ubuntu-22.04
    needs: Build
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: test-sass-build

      - name: Restore Workspace
        run: |
          cd ../
          mv ${{ github.workspace }}/drainpipe.zip /tmp/drainpipe.zip
          unzip -o /tmp/drainpipe.zip -d ${{ github.workspace }}
          cd ${{ github.workspace }}

      - uses: ./drainpipe/scaffold/github/actions/common/set-env

      - name: Install DDEV
        uses: ./drainpipe/scaffold/github/actions/common/ddev
        with:
          git-name: Drainpipe Bot
          git-email: no-reply@example.com#

      - name: Start DDEV
        run: ddev start

      - name: Setup Sass
        run: |
          ddev yarn set version classic
          ddev yarn init -y
          ddev yarn add file:./drainpipe/metapackages/sass --dev

      - name: Compile Sass
        run: ddev task assets

  Test-Yarn-Berry:
     runs-on: ubuntu-22.04
     needs: Build
     steps:
       - uses: actions/download-artifact@v3
         with:
           name: test-sass-build

       - name: Restore Workspace
         run: |
           cd ../
           mv ${{ github.workspace }}/drainpipe.zip /tmp/drainpipe.zip
           unzip -o /tmp/drainpipe.zip -d ${{ github.workspace }}
           cd ${{ github.workspace }}

       - uses: ./drainpipe/scaffold/github/actions/common/set-env

       - name: Install DDEV
         uses: ./drainpipe/scaffold/github/actions/common/ddev
         with:
           git-name: Drainpipe Bot
           git-email: no-reply@example.com#

       - name: Start DDEV
         run: ddev start

       - name: Setup Sass
         run: |
           ddev yarn set version berry
           ddev yarn set version 3
           ddev yarn init -y
           ddev yarn add ./drainpipe/metapackages/sass --dev

       - name: Compile Sass
         run: ddev task assets

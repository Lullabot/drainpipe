name: "Pantheon Review Apps"

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  Drainpipe-Deploy-Pantheon-Multidev:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        path: drainpipe

      - name: Copy composer.json
        run: |
          cp $GITHUB_WORKSPACE/drainpipe/tests/fixtures/drainpipe-test-project/composer.json .
          rm -rf $GITHUB_WORKSPACE/drainpipe

      - uses: ./.github/actions/drainpipe/set-env

      - uses: ./.github/actions/drainpipe/setup-git
        with:
          git-name: Drainpipe Bot
          git-email: no-reply@example.com

      # See https://pantheon.io/docs/ssh-keys/
      # Input the public key for your bot user at https://dashboard.pantheon.io/users/[your-user-id]#account/ssh-keys
      - uses: ./.github/actions/drainpipe/setup-ssh
        with:
          ssh-private-key: ${{ secrets.PANTHEON_SSH_KEY }}
          ssh-known-hosts: ${{ secrets.PANTHEON_SSH_KNOWN_HOSTS }}

      # Generate for your bot user at https://dashboard.pantheon.io/users/[your-user-id]#account/tokens/list
      - uses: ./github/actions/drainpipe/pantheon/setup-terminus
        with:
          pantheon-token: ${{ secrets.PANTHEON_TERMINUS_TOKEN }}

      # Run composer install
      - uses: php-actions/composer@v6
        with:
          php_version: "7.4"
          version: 2
          dev: no

      - name: Build Project
        env:
          directory: /tmp/release
          remote:
          message:
          site:
        run: |
          task build
          task snapshot:directory directory=/tmp/release

      - name: Deploy Pantheon Review App
        uses: ./.github/actions/drainpipe/pantheon/review
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          terminus-token: ${{ secrets.PANTHEON_TERMINUS_TOKEN }}
          site-name: drainpipe-tester
          site-id: 8f899ae5-bdf4-40e2-a984-dcf953417cbf
          commit-message: ${{ github.event.head_commit.message }}

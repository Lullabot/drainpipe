version: '3'

tasks:
  # We intentionally do not include a command for development installations.
  # Since we need to bootstrap fresh clones from git with `composer install`,
  # being able to execute this task means that development files are already
  # available.
  build:prod:
    desc: Build Drupal for production usage
    cmds:
      - composer install --no-dev --optimize-autoloader
    # Disabled until https://github.com/go-task/task/pull/477 is merged and
    # released.
    # sources:
    #   - composer.json
    #   - composer.lock
    # generates:
    #   - ./vendor/composer/installed.json
    #   - ./vendor/autoload.php
    # status:
    #   - >
    #     test -f ./vendor/composer/installed.json && grep -q '"dev": false' ./vendor/composer/installed.json

  update:
    desc: Run Drupal update tasks after deploying new code
    cmds:
      - ./vendor/bin/drush {{.site}} --yes cache:clear plugin
      - ./vendor/bin/drush {{.site}} --yes updatedb --no-post-updates
      # Run config:import twice to make sure we catch any config that didn't declare
      # a dependency correctly. This is also useful when importing large config sets
      # as it can sometimes hit an out of memory error.
      - ./vendor/bin/drush {{.site}} --yes config:import || true
      - ./vendor/bin/drush {{.site}} --yes config:import
      - ./vendor/bin/drush {{.site}} --yes updatedb --no-cache-clear
      - ./vendor/bin/drush {{.site}} --yes cache:rebuild

  maintenance:on:
    desc: Turn on Maintenance Mode
    cmds:
      - ./vendor/bin/drush {{.site}} --yes state:set system.maintenance_mode 1 --input-format=integer

  maintenance:off:
    desc: Turn off Maintenance Mode
    cmds:
      - ./vendor/bin/drush {{.site}} --yes state:set system.maintenance_mode 0 --input-format=integer

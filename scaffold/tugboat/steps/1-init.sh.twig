#!/bin/bash

set -eux
echo "Initializing..."

# Install task
sh -c "$(curl --location https://raw.githubusercontent.com/go-task/task/v3.24.0/install-task.sh)" -- -d -b /usr/local/bin

# Install mysql or mariadb client.
apt-get update
{%  if database_type == "mysql" %}
# mysql was replaced by mariadb in Debian, so we have to install it manually.
# https://dev.mysql.com/doc/mysql-apt-repo-quick-guide/en/#repo-qg-apt-repo-manual-setup
# apt-key is also deprecated, so here we install the key manually.
./.tugboat/steps/install-mysql-client.sh
{% else %}
apt-get install -y {{ database_type }}-client
{% endif %}

# Link the document root to the expected path. Tugboat uses /docroot
# by default. So, if Drupal is located at any other path in your git
# repository, change that here. This example links /web to the docroot
ln -snf "${TUGBOAT_ROOT}/web" "${DOCROOT}"

# Create the Drupal private and public files directories if they aren't
# already present.
mkdir -p "${TUGBOAT_ROOT}/web/sites/default/files"
chmod 777 "${TUGBOAT_ROOT}/web/sites/default/files"

# Install the PHP opcache as it's not included by default and needed for
# decent performance.
docker-php-ext-install opcache

# GD dependencies.
apt-get install -y libpng-dev libjpeg-dev libfreetype6-dev

# WebP dependencies.
apt-get install -y libwebp-dev libwebp7 webp libmagickwand-dev

# Build and install gd.
docker-php-ext-configure gd --with-freetype --with-jpeg --with-webp
docker-php-ext-install gd

# Install ImageMagick. This is recommended by both Acquia and Pantheon instead
# of GD. Lullabot will likely be publishing an ADR recommending it too.
apt-get install -y imagemagick
{% if memory_cache_type == "memcached" %}
# Install the PHP memcache extension. The Drupal Redis module recommends
# phpredis so no PHP extension is required.

apt-get install -y zlib1g-dev
pecl install memcache
echo 'extension=memcache.so' > /usr/local/etc/php/conf.d/memcache.ini
{% endif %}

# Install node
curl -fsSL https://deb.nodesource.com/setup_current.x | bash -
apt-get install -y nodejs
npm install -g n
n {{ nodejs_version }}
# This only works for node > 16, but that version is unsupported now anyway.
corepack enable
{% if 'apache' in webserver_image %}
# Apache
a2enmod headers rewrite
{% endif %}
{% if pantheon %}

# Pantheon
curl --fail -sSL https://github.com/pantheon-systems/terminus/releases/download/$(curl -L --fail --silent "https://api.github.com/repos/pantheon-systems/terminus/releases/latest" | perl -nle'print $& while m{"tag_name": "\K.*?(?=")}g')/terminus.phar --output /usr/local/bin/terminus
chmod 777 /usr/local/bin/terminus
{% endif %}
{% if init.php %}

# Bring in tasks.
composer install --ignore-platform-reqs
task tugboat:php:init
{% endif %}

composer install

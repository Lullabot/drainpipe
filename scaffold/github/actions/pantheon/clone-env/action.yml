name: "Clone Environment"
description: "Clones a Pantheon Environment to another site"
inputs:
  source-site-name:
    description: "Source site name"
    required: true
  source-environment:
    description: "Source environment i.e. dev, test, or live"
    required: true
  target-site-name:
    description: "Target site name"
    required: true
  target-environment:
    description: "Target environment i.e. dev, test, or live"
    required: true
  terminus-token:
    description: "Pantheon Terminus Token"
    required: true
runs:
  using: "composite"
  steps:
      - name: Clone Environment
        run: |
          source .github/actions/drainpipe/set-env/bash_aliases
          drainpipe_exec "terminus auth:login --machine-token=\"${{ inputs.terminus-token }}\""
          if [ "${{ inputs.source-site-name }}" == "${{ inputs.target-site-name }}" ]; then
            drainpipe_exec "terminus -y env:clone-content ${{ inputs.source-site-name }}.${{ inputs.source-environment }} ${{ inputs.target-environment }}"
          else
            drainpipe_exec "terminus backup:create ${{ inputs.source-site-name }}.${{ inputs.source-environment }} --element=database"
            drainpipe_exec "terminus backup:create ${{ inputs.source-site-name }}.${{ inputs.source-environment }} --element=files"
            TARGET_SITE_ID=$(drainpipe_exec "terminus site:lookup ${{ inputs.target-site-name }}")
            DATABASE_URL=$(drainpipe_exec "terminus backup:get ${{ inputs.source-site-name }}.${{ inputs.source-environment }} --element=database")
            # Can't pass the URL on the command line directly because it's got weird characters
            echo $DATABASE_URL > db.env
            drainpipe_exec "terminus -y import:database ${{ inputs.target-site-name }}.${{ inputs.target-environment }} \"\$(cat db.env)\""
            rm db.env
            curl -o files.tar.gz $(drainpipe_exec "terminus backup:get ${{ inputs.source-site-name }}.${{ inputs.source-environment }} --element=files")
            tar -xf files.tar.gz
            drainpipe_exec "rsync -rLvz --delete --size-only --checksum --ipv4 --progress -e 'ssh -p 2222' ./files_${{ inputs.source-environment }}/. --temp-dir=~/tmp/ ${{ inputs.target-environment }}.$TARGET_SITE_ID@appserver.${{ inputs.target-environment }}.$TARGET_SITE_ID.drush.in:files"
          fi
        shell: bash

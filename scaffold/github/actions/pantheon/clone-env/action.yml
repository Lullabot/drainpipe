name: "Clone Environment"
description: "Clones a Pantheon Environment to another site"
inputs:
  source-site-name:
    description: "Source site name"
    required: true
  source-environment:
    description: "Source environment i.e. dev, test, or live"
    required: true
  target-site-name:
    description: "Target site name"
    required: true
  target-environment:
    description: "Target environment i.e. dev, test, or live"
    required: true
  terminus-token:
    description: "Pantheon Terminus Token"
    required: true
runs:
  using: "composite"
  steps:
    - name: Clone Environment
      run: |
        source .github/actions/drainpipe/set-env/bash_aliases
        drainpipe_exec "terminus auth:login --machine-token=\"${TERMINUS_TOKEN}\""
        if [ "${SOURCE_SITE_NAME}" == "${TARGET_SITE_NAME}" ]; then
          drainpipe_exec "terminus -y env:clone-content ${SOURCE_SITE_NAME}.${SOURCE_ENVIRONMENT} ${TARGET_ENVIRONMENT}"
        else
          drainpipe_exec "terminus backup:create ${SOURCE_SITE_NAME}.${SOURCE_ENVIRONMENT} --element=database"
          drainpipe_exec "terminus backup:create ${SOURCE_SITE_NAME}.${SOURCE_ENVIRONMENT} --element=files"
          TARGET_SITE_ID=$(drainpipe_exec "terminus site:lookup ${TARGET_SITE_NAME}")
          DATABASE_URL=$(drainpipe_exec "terminus backup:get ${SOURCE_SITE_NAME}.${SOURCE_ENVIRONMENT} --element=database")
          # Cannot pass the URL on the command line directly because it has weird characters.
          echo $DATABASE_URL > db.env
          drainpipe_exec "terminus -y import:database ${TARGET_SITE_NAME}.${TARGET_ENVIRONMENT} \"\$(cat db.env)\""
          rm db.env
          curl -o files.tar.gz $(drainpipe_exec "terminus backup:get ${SOURCE_SITE_NAME}.${SOURCE_ENVIRONMENT} --element=files")
          tar -xf files.tar.gz
          drainpipe_exec "rsync -rLvz --delete --size-only --checksum --ipv4 --progress -e 'ssh -p 2222' ./files_${SOURCE_ENVIRONMENT}/. --temp-dir=~/tmp/ ${TARGET_ENVIRONMENT}.$TARGET_SITE_ID@appserver.${TARGET_ENVIRONMENT}.$TARGET_SITE_ID.drush.in:files"
        fi
      shell: bash
      env:
        TARGET_ENVIRONMENT: ${{ inputs.target-environment }}
        SOURCE_ENVIRONMENT: ${{ inputs.source-environment }}
        SOURCE_SITE_NAME: ${{ inputs.source-site-name }}
        TARGET_SITE_NAME: ${{ inputs.target-site-name }}
        TERMINUS_TOKEN: ${{ inputs.terminus-token }}

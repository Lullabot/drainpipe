name: "Deploy a branch to Acquia"
description: "Deploys a review app to an Acquia Environment"
inputs:
  github-token:
    description: "GitHub token as generated automatically in secrets.GITHUB_TOKEN"
    required: true
  environment:
    description: "The environment to push to, either uuid or alias"
    required: true
  run-installer:
    description: "Whether or not to run the Drupal site installer. Defaults to false."
    required: false
  commit-message:
    description: "The commit message to use when pushing to Acquia"
    required: true
  api-key:
    description: "Acquia API Key"
    required: true
  api-secret:
    description: "Acquia API Secret"
    required: true
  acquia-ssh-private-key:
    description: "Acquia SSH Private Key"
    required: true

runs:
  using: "composite"
  steps:
    - name: Create GitHub Deployment
      uses: ./.github/actions/drainpipe/deployment-create
      with:
        github-token: ${{ inputs.github-token }}
        environment: ${{ inputs.environment }}

    - name: Put site in Maintenance Mode
      shell: bash
      run: |

        source .github/actions/drainpipe/set-env/bash_aliases

        # debug who is running the command
        echo "Debugging who is running the command"
        drainpipe_exec "whoami"
        drainpipe_exec "pwd"
        drainpipe_exec "ls -la"
        echo "=== end of debug ==="

        # Add the Acquia SSH private key to DDEV.
        drainpipe_exec "echo \"${{ inputs.acquia-ssh-private-key }}\" > ~/.ssh/id_rsa"
        drainpipe_exec "chmod 600 ~/.ssh/id_rsa"

        drainpipe_exec "echo \"StrictHostKeyChecking no\" >> ~/.ssh/config"
        drainpipe_exec "ACQUIA_API_KEY=${{ inputs.api-key }} ACQUIA_API_SECRET=${{ inputs.api-secret }} ./vendor/bin/task acquia:auth"
        ENVIRONMENT="${{ inputs.environment }}"
        APPLICATION=${ENVIRONMENT%.*}
        drainpipe_exec "acli remote:aliases:download --no-interaction $APPLICATION"

        # Avoid using drush9, it seems to be an Acquia issue.
        # https://docs.acquia.com/acquia-cloud-platform/manage-apps/command-line/drush#section-specifying-a-version-of-drush-in-commands
        # Removes *.paths where drush9 is specified.
        drainpipe_exec "yq eval '(.** | .paths) = {}' -i /var/www/html/drush/sites/${APPLICATION}.site.yml"
        drainpipe_exec "drush @${{ inputs.environment }} config:set system.maintenance_mode value true --yes"

        # Define variables
        aliases_yml="/var/www/html/drush/sites/${APPLICATION}.site.yml"
        # Extract the dev.uri value
        echo "acquia_env_uri=$(yq e \".$env.uri\" "$aliases_yml")" >> $GITHUB_ENV

    - name: Push to Acquia
      uses: ./github/actions/drainpipe/acquia/push
      with:
        environment: ${{ inputs.environment }}
        commit-message: ${{ inputs.commit-message }}
        api-key: ${{ inputs.api-key }}
        api-secret: ${{ inputs.api-secret }}
        acquia-ssh-private-key: ${{ inputs.acquia-ssh-private-key }}

    - name: Run updates
      uses: ./github/actions/drainpipe/acquia/update
      with:
        environment: ${{ inputs.environment }}
        run-installer: ${{ inputs.run-installer }}
        api-key: ${{ inputs.api-key }}
        api-secret: ${{ inputs.api-secret }}

    - name: Set Deployment Status
      uses: ./.github/actions/drainpipe/deployment-status
      with:
        github-token: ${{ inputs.github-token }}
        environment-url: ${{ env.acquia_env_uri }}

    - name: Take site out of Maintenance Mode
      run: |

        source .github/actions/drainpipe/set-env/bash_aliases
        drainpipe_exec "drush @${{ inputs.environment }} config:set system.maintenance_mode value false --yes"
      shell: bash

name: "Functional Tests"

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  Functional-Tests:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/.ddev/.drainpipe-composer-cache
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - uses: ./.github/actions/drainpipe/set-env

      - name: Install and Start DDEV
        uses: ./.github/actions/drainpipe/ddev
        with:
          git-name: Drainpipe Bot
          git-email: no-reply@example.com
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          ssh-known-hosts: ${{ secrets.SSH_KNOWN_HOSTS }}

      - name: Build Project
        run: |
          ddev composer install
          if ddev task --list | grep -q "build:ci:functional"; then
            ddev task build:ci:functional
          else
            ddev task build
          fi

      - name: Run Functional Tests
        run: ddev task test:functional

      - name: Upload test artifacts
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: test_result
          path: test_result
